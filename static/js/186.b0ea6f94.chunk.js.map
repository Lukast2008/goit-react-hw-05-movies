{"version":3,"file":"static/js/186.b0ea6f94.chunk.js","mappings":"+SACMA,EAAU,gCACVC,EAAS,mCAGR,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACaC,EAAAA,EAAAA,IAAA,UACbH,EADa,0DAC4CC,EAD5C,iBAHP,KAGO,wCADb,cACCG,EADD,yBAIEA,EAAIC,KAAKC,SAJX,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,uFACaL,EAAAA,EAAAA,IAAA,UACbH,EADa,gCACkBC,EADlB,yBACyCO,IAFtD,cACCJ,EADD,yBAKEA,EAAIC,KAAKC,SALX,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACaP,EAAAA,EAAAA,IAAA,UACbH,EADa,iBACGU,EADH,mCACgCT,IAF7C,cACCG,EADD,yBAIEA,GAJF,kEAOA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAmCD,GAAnC,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACFU,EADE,4BACoBT,EADpB,oBADlB,cACCW,EADD,yBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCH,GAAhC,uFACkBP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACFU,EADE,4BACoBT,EADpB,2BADlB,cACCW,EADD,yBAIEA,GAJF,kE,8ECHP,UA1BgB,WACd,IAAME,GAASC,EAAAA,EAAAA,MACf,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQR,EAAOI,EAAPJ,GAOR,OALAS,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAiBH,GAAIU,MAAK,SAAAR,GAAQ,OAAIM,EAAYN,EAASP,KAAKC,QAA9B,GACnC,GAAE,CAACI,EAAIQ,IAGgB,IAApBD,EAASI,QAAqB,gDAGhC,iCACE,qCACA,wBACGJ,EAASK,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASd,EAApB,EAAoBA,GAApB,OACZ,2BACE,wBAAKa,KACL,uBAAIC,MAFGd,EADG,QASrB,C","sources":["GetAPI/GetAPI.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst BaseURL = 'https://api.themoviedb.org/3/';\nconst APIkey = '62527f4fbcbc619de4f3bda00e915376';\nconst page = '12';\n\nexport async function GetDataMovies() {\n  const res = await axios.get(\n    `${BaseURL}discover/movie?sort_by=popularity.desc&api_key=${APIkey}&page=${page}&language=en-US&include_adult=false`\n  );\n  return res.data.results;\n}\n\nexport async function GetSearchMovies(search) {\n  const res = await axios.get(\n    `${BaseURL}search/movie?api_key=${APIkey}&page=1&query=${search}`\n  );\n\n  return res.data.results;\n}\n\nexport async function GetMoviesByID(id) {\n  const res = await axios.get(\n    `${BaseURL}movie/${id}?language=en-US&api_key=${APIkey}`\n  );\n  return res;\n}\n\nexport async function GetMoviesByDetailed(id) {\n  const response = await axios.get(\n    `${BaseURL}movie/${id}/credits?api_key=${APIkey}&language=en-US`\n  );\n  return response;\n}\n\nexport async function GetMoviesReviews(id) {\n  const response = await axios.get(\n    `${BaseURL}movie/${id}/reviews?api_key=${APIkey}&language=en-US&page=1`\n  );\n  return response;\n}\n\n\n","\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { GetMoviesReviews } from '../../GetAPI/GetAPI';\n\nconst Reviews = () => {\n  const params = useParams();\n  const [reviewer, serReviewer] = useState([]);\n  const { id } = params;\n\n  useEffect(() => {\n    GetMoviesReviews(id).then(response => serReviewer(response.data.results));\n  }, [id, serReviewer]);\n\n\n  if (reviewer.length === 0) return <h2>Reviewer not found</h2>;\n\n  return (\n    <>\n      <h3>Reviews</h3>\n      <ul>\n        {reviewer.map(({ author, content, id }) => (\n          <li key={id}>\n            <h3>{author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["BaseURL","APIkey","GetDataMovies","axios","res","data","results","GetSearchMovies","search","GetMoviesByID","id","GetMoviesByDetailed","response","GetMoviesReviews","params","useParams","useState","reviewer","serReviewer","useEffect","then","length","map","author","content"],"sourceRoot":""}